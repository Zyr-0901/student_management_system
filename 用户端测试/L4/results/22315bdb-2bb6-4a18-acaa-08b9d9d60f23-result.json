{"name": "邮箱输入不完整", "status": "failed", "statusDetails": {"message": "AssertionError: assert '' == '请填写正确的邮箱地址'\n  - 请填写正确的邮箱地址", "trace": "self = <test_create_member.TestCreateMember object at 0x1155db4c0>\ninvalid_type = 'invalidEmail', username = 'test', acctid = 'test26@qq.com'\nphone = '15650779826', email = 'test26@qq', excepted = '请填写正确的邮箱地址'\ndesc = '邮箱输入不完整'\n\n    @allure.story(\"无效测试\")\n    @pytest.mark.parametrize(\"invalid_type, username, acctid, phone, email, excepted, desc\",\n                             OperateYaml.read_yaml(\"dates/mock_data.yaml\").get(\"qywx\").get(\"invalidCreate\"))\n    def test_invalid_create_member(self, invalid_type, username, acctid, phone, email, excepted, desc):\n        allure.dynamic.title(desc)\n        if invalid_type == \"invalidUsername\":\n            result = self.home \\\n                .click_add_by_home() \\\n                .create_member_invalid_username(username, acctid, phone, email)\n        if invalid_type == \"invalidAcctid\":\n            result = self.home \\\n                .click_add_by_home() \\\n                .create_member_invalid_acctid(username, acctid, phone, email)\n        if invalid_type == \"invalidPhone\":\n            result = self.home \\\n                .click_add_by_home() \\\n                .create_member_invalid_phone(username, acctid, phone, email)\n        if invalid_type == \"invalidEmail\":\n            result = self.home \\\n                .click_add_by_home() \\\n                .create_member_invalid_email(username, acctid, phone, email)\n>       assert result == excepted\nE       AssertionError: assert '' == '请填写正确的邮箱地址'\nE         - 请填写正确的邮箱地址\n\n用户端测试/L4/tests/member_management/test_create_member.py:146: AssertionError"}, "steps": [{"name": "在首页,点击添加成员", "status": "passed", "start": 1692170388405, "stop": 1692170391610}, {"name": "无效邮箱测试, test26@qq", "status": "passed", "attachments": [{"name": "1692170393_成员邮箱无效test26@qq.PNG", "source": "8dab7311-3fa9-48cf-b369-1a46d973a272-attachment.png", "type": "image/png"}], "start": 1692170391610, "stop": 1692170396721}], "attachments": [{"name": "log", "source": "7770201d-068c-47b9-b2ff-e45da5ce4fb9-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "0b4480bd-dadf-4bb1-95e7-b6576eba97a8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "invalid_type", "value": "'invalidEmail'"}, {"name": "username", "value": "'test'"}, {"name": "acctid", "value": "'test26@qq.com'"}, {"name": "phone", "value": "'15650779826'"}, {"name": "email", "value": "'test26@qq'"}, {"name": "excepted", "value": "'请填写正确的邮箱地址'"}, {"name": "desc", "value": "'邮箱输入不完整'"}], "start": 1692170388405, "stop": 1692170396729, "uuid": "796dfba6-31be-402a-b600-aa88835492d5", "historyId": "8ca50187504d56fa99668f55511564dc", "testCaseId": "0eaf5b13c9f9b321b15899d366539e93", "fullName": "ç¨æ·ç«¯æµè¯.L4.tests.member_management.test_create_member.TestCreateMember#test_invalid_create_member", "labels": [{"name": "story", "value": "无效测试"}, {"name": "epic", "value": "通讯录管理"}, {"name": "feature", "value": "创建通讯录成员"}, {"name": "parentSuite", "value": "ç¨æ·ç«¯æµè¯.L4.tests.member_management"}, {"name": "suite", "value": "test_create_member"}, {"name": "subSuite", "value": "TestCreateMember"}, {"name": "host", "value": "Z-melody.local"}, {"name": "thread", "value": "19150-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ç¨æ·ç«¯æµè¯.L4.tests.member_management.test_create_member"}]}