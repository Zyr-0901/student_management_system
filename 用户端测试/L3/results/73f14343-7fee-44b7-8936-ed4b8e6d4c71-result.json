{"name": "邮箱输入不完整", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001031daa6c chromedriver + 4303468\n1   chromedriver                        0x00000001031d3198 chromedriver + 4272536\n2   chromedriver                        0x0000000102e07594 chromedriver + 292244\n3   chromedriver                        0x0000000102e448fc chromedriver + 542972\n4   chromedriver                        0x0000000102e7d628 chromedriver + 775720\n5   chromedriver                        0x0000000102e38b40 chromedriver + 494400\n6   chromedriver                        0x0000000102e39988 chromedriver + 498056\n7   chromedriver                        0x000000010319b924 chromedriver + 4045092\n8   chromedriver                        0x000000010319fe68 chromedriver + 4062824\n9   chromedriver                        0x00000001031a6088 chromedriver + 4087944\n10  chromedriver                        0x00000001031a096c chromedriver + 4065644\n11  chromedriver                        0x0000000103178e64 chromedriver + 3903076\n12  chromedriver                        0x00000001031bc55c chromedriver + 4179292\n13  chromedriver                        0x00000001031bc6b4 chromedriver + 4179636\n14  chromedriver                        0x00000001031cc978 chromedriver + 4245880\n15  libsystem_pthread.dylib             0x000000018285826c _pthread_start + 148\n16  libsystem_pthread.dylib             0x000000018285308c thread_start + 8", "trace": "self = <test_create_member.TestCreateMember object at 0x101f3fca0>, invalid_type = 'invalidEmail', username = 'test', acctid = 'test13@qq.com', phone = '15650779804'\nemail = 'test13@qq', excepted = '请填写正确的邮箱地址', desc = '邮箱输入不完整'\n\n    @allure.story(\"无效测试\")\n    @pytest.mark.parametrize(\"invalid_type, username, acctid, phone, email, excepted, desc\",\n                             OperateYaml.read_yaml(\"dates/mock_data.yaml\").get(\"qywx\").get(\"invalidCreate\"))\n    def test_invalid_create_member(self, invalid_type, username, acctid, phone, email, excepted, desc):\n        allure.dynamic.title(desc)\n        # if invalid_type == \"invalidUsername\":\n        #     result = self.home \\\n        #         .click_add_by_home() \\\n        #         .create_member_invalid_username(username, acctid, phone, email)\n        # if invalid_type == \"invalidAcctid\":\n        #     result = self.home \\\n        #         .click_add_by_home() \\\n        #         .create_member_invalid_acctid(username, acctid, phone, email)\n        if invalid_type == \"invalidPhone\":\n            result = self.home \\\n                .click_add_by_home() \\\n                .create_member_invalid_phone(username, acctid, phone, email)\n        if invalid_type == \"invalidEmail\":\n            result = self.home \\\n>               .click_add_by_home() \\\n                .create_member_invalid_email(username, acctid, phone, email)\n\n用户端测试/L3/tests/member_management/test_create_member.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n用户端测试/L3/page_objects/home_page.py:18: in click_add_by_home\n    self.wait_element_until_click(self._ADD_MEMBER).click()\n用户端测试/L3/page_objects/base_page.py:55: in wait_element_until_click\n    return WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8e3a8b8848d3578883a1ff8079a1dd59\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x100544310>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001031daa6c chromedriver + 4303468\nE       1   chromedriver                        0x00000001031d3198 chromedriver + 4272536\nE       2   chromedriver                        0x0000000102e07594 chromedriver + 292244\nE       3   chromedriver                        0x0000000102e448fc chromedriver + 542972\nE       4   chromedriver                        0x0000000102e7d628 chromedriver + 775720\nE       5   chromedriver                        0x0000000102e38b40 chromedriver + 494400\nE       6   chromedriver                        0x0000000102e39988 chromedriver + 498056\nE       7   chromedriver                        0x000000010319b924 chromedriver + 4045092\nE       8   chromedriver                        0x000000010319fe68 chromedriver + 4062824\nE       9   chromedriver                        0x00000001031a6088 chromedriver + 4087944\nE       10  chromedriver                        0x00000001031a096c chromedriver + 4065644\nE       11  chromedriver                        0x0000000103178e64 chromedriver + 3903076\nE       12  chromedriver                        0x00000001031bc55c chromedriver + 4179292\nE       13  chromedriver                        0x00000001031bc6b4 chromedriver + 4179636\nE       14  chromedriver                        0x00000001031cc978 chromedriver + 4245880\nE       15  libsystem_pthread.dylib             0x000000018285826c _pthread_start + 148\nE       16  libsystem_pthread.dylib             0x000000018285308c thread_start + 8\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "steps": [{"name": "在首页,点击添加成员", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001031daa6c chromedriver + 4303468\n1   chromedriver                        0x00000001031d3198 chromedriver + 4272536\n2   chromedriver                        0x0000000102e07594 chromedriver + 292244\n3   chromedriver                        0x0000000102e448fc chromedriver + 542972\n4   chromedriver                        0x0000000102e7d628 chromedriver + 775720\n5   chromedriver                        0x0000000102e38b40 chromedriver + 494400\n6   chromedriver                        0x0000000102e39988 chromedriver + 498056\n7   chromedriver                        0x000000010319b924 chromedriver + 4045092\n8   chromedriver                        0x000000010319fe68 chromedriver + 4062824\n9   chromedriver                        0x00000001031a6088 chromedriver + 4087944\n10  chromedriver                        0x00000001031a096c chromedriver + 4065644\n11  chromedriver                        0x0000000103178e64 chromedriver + 3903076\n12  chromedriver                        0x00000001031bc55c chromedriver + 4179292\n13  chromedriver                        0x00000001031bc6b4 chromedriver + 4179636\n14  chromedriver                        0x00000001031cc978 chromedriver + 4245880\n15  libsystem_pthread.dylib             0x000000018285826c _pthread_start + 148\n16  libsystem_pthread.dylib             0x000000018285308c thread_start + 8\n\n", "trace": "  File \"/Users/zhangyarong/Documents/project/student_management_system/用户端测试/L3/page_objects/home_page.py\", line 18, in click_add_by_home\n    self.wait_element_until_click(self._ADD_MEMBER).click()\n  File \"/Users/zhangyarong/Documents/project/student_management_system/用户端测试/L3/page_objects/base_page.py\", line 55, in wait_element_until_click\n    return WebDriverWait(self.driver, 10).until(\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1691835142591, "stop": 1691835156204}], "parameters": [{"name": "invalid_type", "value": "'invalidEmail'"}, {"name": "username", "value": "'test'"}, {"name": "acctid", "value": "'test13@qq.com'"}, {"name": "phone", "value": "'15650779804'"}, {"name": "email", "value": "'test13@qq'"}, {"name": "excepted", "value": "'请填写正确的邮箱地址'"}, {"name": "desc", "value": "'邮箱输入不完整'"}], "start": 1691835142591, "stop": 1691835156208, "uuid": "7b62b3f0-ae1c-48b9-b3bc-acf70f127280", "historyId": "9460fe0c26182b7f838b365ff98f47bc", "testCaseId": "a8220e53b3fdb36ee9836611cf380c73", "fullName": "ç¨æ·ç«¯æµè¯.L3.tests.member_management.test_create_member.TestCreateMember#test_invalid_create_member", "labels": [{"name": "feature", "value": "创建通讯录成员"}, {"name": "epic", "value": "通讯录管理"}, {"name": "story", "value": "无效测试"}, {"name": "parentSuite", "value": "ç¨æ·ç«¯æµè¯.L3.tests.member_management"}, {"name": "suite", "value": "test_create_member"}, {"name": "subSuite", "value": "TestCreateMember"}, {"name": "host", "value": "zhangyarongdeMacBook-Pro-2.local"}, {"name": "thread", "value": "76347-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ç¨æ·ç«¯æµè¯.L3.tests.member_management.test_create_member"}]}